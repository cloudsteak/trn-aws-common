AWSTemplateFormatVersion: '2010-09-09'
Description: Create a VPC with a Public and a Private Subnet with dynamic parameters

Parameters:
  VpcCidr:
    Description: CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetCidr:
    Description: CIDR block for the Public Subnet
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnetCidr:
    Description: CIDR block for the Private Subnet
    Type: String
    Default: 10.0.2.0/24

  VpcName:
    Description: Name tag for the VPC
    Type: String
    Default: MentorVPC

  InternetGatewayName:
    Description: Name tag for the Internet Gateway
    Type: String
    Default: MentorInternetGateway

  PublicSubnetName:
    Description: Name tag for the Public Subnet
    Type: String
    Default: MentorPublicSubnet

  PrivateSubnetName:
    Description: Name tag for the Private Subnet
    Type: String
    Default: MentorPrivateSubnet

  PublicRouteTableName:
    Description: Name tag for the Public Route Table
    Type: String
    Default: MentorPublicRouteTable

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VpcName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGatewayName

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Ref PublicSubnetName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnetName

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PublicRouteTableName

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
